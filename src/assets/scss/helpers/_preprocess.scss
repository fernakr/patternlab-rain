$font-sizes: ();
$utilities-colors: (
  'white': $white,
  'black': $black
);
$utilities-light-colors: ();
$additional-palette: ();
//$header-styles: ();
$header-styles: $headingStyles;
@each $key, $value in $headingStyles {
  // if last in map
  @each $sizeKey, $sizeValue in $value {
    @if index(map-keys($headingStyles), $key) == length(map-keys($headingStyles)) {
      $font-sizes: map.set($font-sizes, str-slice($sizeKey,2,3), rem-calc(#{map-get($sizeValue,'font-size')}));
    }
    //$header-styles: map.set($value, 'h'$sizeKey, ('font-size': $value));
  }
}



@function map-set($map, $key, $value) {
  $new: ($key: $value);
  @return map-merge($map, $new);
}



$palettes: ('primary': $primary, 'secondary': $secondary, 'tertiary':$tertiary,'gray':$gray);

@each $palette, $map in $palettes {
  @include generateVariants($map, $palette);
}

// Utilities


$spacer-mobile: $spacer *.625;